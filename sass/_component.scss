@charset "utf-8";


::-moz-selection{  //firefox
	background-color: lighten($accentColor, 10%);
	color: #fff;
}
::selection { // css3
	background-color: lighten($accentColor, 10%);
	color: #fff;
}

// 簡易ロールオーバー
.opacity {
	opacity: $opacity_value;
	-moz-opacity: $opacity_value;
	filter: alpha(opacity=#{$opacity_value * 100});
	-ms-filter: "alpha(opacity=#{$opacity_value * 100})";
}

.imgHover img:hover {
	@extend .opacity;
}

a[href$=".pdf"],
a.pdf{
	padding-right: 24px;
	// background: url("#{$img_path}common/icoPdf.gif") no-repeat right center;
}
a[target="_blank"],
a.blank{
	padding-right: 20px;
	// background: url("#{$img_path}common/listBlank.gif") no-repeat right center;
}
.zoomIn,
a[href$=".gif"] img,
a[href$=".png"] img,
a[href$=".jpg"] img,
a[href$=".jpeg"] img,
a[href$=".bmp"] img {
	@each $prefix in $set_prefix {
	cursor: #{$prefix}zoom-in;
	}
}
.pointer{
	cursor: pointer;
}



/* clearfix */
.clearfix {
	*zoom: 1;
	&:after {
		content: ".";
		display: block;
		clear: both;
		height: 0;
		visibility: hidden;
	}
}

// inline-block
.inlineBlock {
	display: inline-block;
	*display: inline;
	*zoom: 1;
}

.hide{display: none;}

// min-height
@mixin min_height($value) {
	min-height: $value;
	_height: $value;
}

// width
@for $i from 4 through 50 {
	.box#{$i * 10}{
		width: #{$i * 10}px;
	}
}

// 余白調整用のクラス
@if $use_spacing_classes {
	@for $i from 0 through 20 {
		.mt#{$i * 5} { margin-top: 5px * $i !important; }
		.mb#{$i * 5} { margin-bottom: 5px * $i !important; }
		.pt#{$i * 5} { padding-top: 5px * $i !important; }
		.pb#{$i * 5} { padding-bottom: 5px * $i !important; }
		.p#{$i * 5}  { padding: 5px * $i !important; }
	}
}

// float: right
.fr,
.imgR {
	float: right;
	margin-left: 10px;
}

// float: left
.fl,
.imgL {
	float: left;
	margin-right: 10px;
}

// text-align: center
.imgC,
.tC{ text-align: center; }

// img Centering
.imgC {
	display: block;
	margin-left: auto;
	margin-right: auto;
}
// text-align: right
.tL{ text-align: left !important;}
// text-align: right
.tR{ text-align: right !important;}



// form element
textarea, input, select{
	margin: 1px;
	padding: 3px;
}
input[type="submit"],button{
	@extend .pointer;
}
input[type="text"],input[type="password"],select,textarea{
	border: 1px solid #ddd;
	@include border-radius(3px);
	background-color: #fbfbfb;
	box-shadow: 1px 1px 2px rgba(200, 200, 200, 0.2) inset;
}
input[type="text"]:focus,input[type="password"]:focus,select:focus,textarea:focus{
	border-color: #aaa;
	background-color: #fefefe;
}

::-webkit-input-placeholder {color: #999;}
:-moz-placeholder {color: #999;}
:-ms-input-placeholder {color: #999;}
.placeholder{color: #999;}



.description{
	font-size: fz(12);
	color: #666;
	letter-spacing: 0;
}


/* button */
.btn01,.btn02,.btn03{
	@include border-radius(4px);
}
a.btn01,a.btn02,a.btn03{
	padding: .4em .8em .3em;
	text-decoration: none !important;
	@extend .inlineBlock;
}
input.btn01,input.btn02,input.btn03{
	padding: .2em .6em .1em;
}
.btn01:hover,.btn02:hover,.btn03:hover{
	@extend .pointer;
}
.btnL{
	padding: .6em 3em .5em !important;
	font-size: fz(14);
}
.btnS{
	padding: .1em .3em 0 !important;
	font-size: fz(11);
}

.btn01{
	border: solid 1px #419b00;
	color: #fff !important;
	text-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);

	background-color: #6bc827;
	@include background-image(linear-gradient(bottom,#6bc827,#58c10c 40%,#76cc37));
	box-shadow: inset 0 0 7px rgba(255,255,255,.4);
}
.btn01:hover{
	box-shadow: inset 0 0 5px 3px rgba(255,255,255,.4);
}

.btn02{
	border: solid 1px #ccc;
	background-color: #fff;
	color: #333 !important;
	@include background-image(linear-gradient(bottom, #ededed, #ededed 2%, #fdfdfd 40%, #fff));
}
.btn02:hover{
	@include background-image(linear-gradient(bottom, #ddd, #fff));
}

.btn03{
	border: solid 1px #0075b0;
	color: #fff !important;
	text-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);

	background-color: #066caa;
	@include background-image(linear-gradient(top, #066caa, #008fc7, #c1dbe8));
	box-shadow: inset 0 0 7px rgba(255,255,255,.4);
}
.btn03:hover{
	box-shadow: inset 0 0 5px 3px rgba(255,255,255,.4);
}